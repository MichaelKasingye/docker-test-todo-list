name: Deploy to Ubuntu Server

on:
    pull_request:
        types: [closed]
        branches:
            - develop
    # push:
    #   branches: ["main"]

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '16.x'

            - name: Build Docker image
              run: docker build -t todolist:latest .

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Login to Docker
              # run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io

            - name: Push Docker image
              run: docker push todolist:latest

            - name: Checkout code
              uses: actions/checkout@v2
              with:
                  repository: MichaelKasingye/docker-test-todo-list
                  ref: ${{ github.ref }}
                  token: ${{ secrets.SSH_PUBLIC_KEY }}

            # - name: Deploy to server
            #   uses: appleboy/ssh-action@v0.1.8
            #   with:
            #       run: echo "$SSH_PRIVATE_KEY"
            #       username: ${{ secrets.SERVER_USER }}
            #       host: ${{ secrets.REMOTE_HOST }}
            #       password: ${{ secrets.SERVER_PASSWORD }}
            #       port: ${{ secrets.SERVER_PORT }}
            #       key: ${{ secrets.SSH_PUBLIC_KEY }}
            #       script: |
            #           cd /home/sprintdevs
            #           cd maven
            #           git pull
            #           sudo -S systemctl restart docker
            #           echo "End of restart docker..."

            #           sudo docker compose --env-file ../.env  up -d
            #           echo "End of Docker-compose...."
            # 
